source $BIN_DIR/utils

PYTHON_VERSION=''
if [ -f runtime.txt ]; then
  PYTHON_VERSION=$(cat runtime.txt)
fi
PYTHON_VERSION=$($ROOT_DIR/bin/steps/libs/version.rb $ROOT_DIR/manifest.yml $PYTHON_VERSION)
PYTHON_DIR=$DEPS_DIR/$DEPS_IDX/python

# Install Python.
if [ -f $CACHE_DIR/python-stack ]; then
  if [ ! $(cat $CACHE_DIR/python-stack) = $CF_STACK ]; then
    ## TODO - What is this vendor directory?
    rm -fr $PYTHON_DIR $CACHE_DIR/python-version $CACHE_DIR/python-stack $CACHE_DIR/vendor
    unset SKIP_INSTALL
  fi
fi
if [ -f $CACHE_DIR/python-version ]; then
  if [ ! $(cat $CACHE_DIR/python-version) = $PYTHON_VERSION ]; then
    puts-step "Found $(cat $CACHE_DIR/python-version), removing"
    ## do we want to remove for
    rm -fr $PYTHON_DIR $CACHE_DIR/python-version $CACHE_DIR/vendor
  else
    SKIP_INSTALL=1
  fi
fi

if [ ! "$SKIP_INSTALL" ]; then
  puts-step "Installing $PYTHON_VERSION"

  # Prepare destination directory.
  mkdir $PYTHON_DIR

  exit_code=0
  url="https://lang-python.s3.amazonaws.com/$STACK/runtimes/$PYTHON_VERSION.tar.gz"

  filtered_url=$($ROOT_DIR/compile-extensions/bin/download_dependency $url /tmp) || exit_code=$?
  if [ $exit_code -ne 0 ]; then
    $ROOT_DIR/compile-extensions/bin/recommend_dependency $url
    exit 1
  fi
  $ROOT_DIR/compile-extensions/bin/warn_if_newer_patch $url "$ROOT_DIR/manifest.yml"

  downloaded_file=/tmp/$PYTHON_VERSION.tar.gz
  tar zxvf $downloaded_file -C $PYTHON_DIR &> /dev/null
  rm $downloaded_file
  echo "Downloaded [$filtered_url]"
  FRESH_PYTHON=true
fi

# Link
mkdir -p $DEPS_DIR/$DEPS_IDX/bin
pushd $DEPS_DIR/$DEPS_IDX/bin >/dev/null
  ln -s ../python/bin/* .
popd >/dev/null
mkdir -p $DEPS_DIR/$DEPS_IDX/lib
pushd $DEPS_DIR/$DEPS_IDX/lib >/dev/null
  ln -s ../python/lib/* .
popd >/dev/null
mkdir -p $DEPS_DIR/$DEPS_IDX/include
pushd $DEPS_DIR/$DEPS_IDX/include >/dev/null
  ln -s ../python/include/* .
popd >/dev/null

# Record for future reference.
echo $PYTHON_VERSION > "$CACHE_DIR/python-version"
echo $CF_STACK > "$CACHE_DIR/python-stack"

hash -r

# If Pip isn't up to date:
if [ "$FRESH_PYTHON" ] || [[ ! $(pip --version) == *$PIP_VERSION* ]]; then
  $ROOT_DIR/vendor/get-pip.py --prefix=$DEPS_DIR/$DEPS_IDX/python

  mkdir -p $DEPS_DIR/$DEPS_IDX/bin
  pushd $DEPS_DIR/$DEPS_IDX/bin >/dev/null
    ln -sf ../python/bin/* .
  popd >/dev/null
  mkdir -p $DEPS_DIR/$DEPS_IDX/lib
  pushd $DEPS_DIR/$DEPS_IDX/lib >/dev/null
    ln -sf ../python/lib/* .
  popd >/dev/null
  mkdir -p $DEPS_DIR/$DEPS_IDX/include
  pushd $DEPS_DIR/$DEPS_IDX/include >/dev/null
    ln -sf ../python/include/* .
  popd >/dev/null
  mkdir -p $DEPS_DIR/$DEPS_IDX/pkgconfig
  pushd $DEPS_DIR/$DEPS_IDX/pkgconfig >/dev/null
    ln -sf ../python/lib/pkgconfig/* .
  popd >/dev/null
fi

hash -r
