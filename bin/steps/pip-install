# Install dependencies with Pip.
puts-cmd "pip install -r requirements.txt"

which pip

set +e
# delete any existing egg links, to uninstall exisisting installations.
find $DEPS_DIR/$DEPS_IDX/python/lib/python*/site-packages/ -name "*.egg-link" -delete 2> /dev/null
find $DEPS_DIR/$DEPS_IDX/python/lib/python*/site-packages/ -name "*.pth" -print0 2> /dev/null | xargs -r -0 -n 1 sed -i -e "s#/app/#/$(pwd)/#" &> /dev/null
set -e

set +e
# Support for the above, for PyPy.
find $DEPS_DIR/$DEPS_IDX/python/lib-python/*/site-packages/ -name "*.egg-link" -print0 2> /dev/null | xargs -r -0 -n 1 sed -i -e "s#/app/#$(pwd)/#" &> /dev/null
find $DEPS_DIR/$DEPS_IDX/python/lib-python/*/site-packages/ -name "*.pth" -print0 2> /dev/null | xargs -r -0 -n 1 sed -i -e "s#/app/#/$(pwd)/#" &> /dev/null
set -e

if test -d $DEPS_DIR/$DEPS_IDX/vendor; then
  $DEPS_DIR/$DEPS_IDX/python/bin/pip install -r requirements.txt --exists-action=w --src=$DEPS_DIR/$DEPS_IDX/src --no-index --find-links=file://$BUILD_DIR/vendor | cleanup | indent
  cp requirements.txt $DEPS_DIR/$DEPS_IDX/python/requirements-declared.txt
  $DEPS_DIR/$DEPS_IDX/python/bin/pip freeze --find-links=file://$BUILD_DIR/vendor --disable-pip-version-check > $DEPS_DIR/$DEPS_IDX/python/requirements-installed.txt
else
  $DEPS_DIR/$DEPS_IDX/python/bin/pip install -r requirements.txt --exists-action=w --src=$DEPS_DIR/$DEPS_IDX/src | cleanup | indent

  cp requirements.txt $DEPS_DIR/$DEPS_IDX/python/requirements-declared.txt
  $DEPS_DIR/$DEPS_IDX/python/bin/pip freeze > $DEPS_DIR/$DEPS_IDX/python/requirements-installed.txt
fi

echo
